name: CI/CD Pipeline

on:
  push:
    branches: ["main"]    
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: 🔍 Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: |
          echo "run tests here"
          # npm install && npm test  (או מה שמתאים לך)

  build_and_push:
    name: 🛠️ Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    name: 🚀 Deploy to Kubernetes (dev namespace)
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Clean dev namespace
        shell: bash
        run: |
          echo "⛔ Deleting namespace 'dev' (if exists)..."
          kubectl delete namespace dev --ignore-not-found
          echo "📦 Creating namespace 'dev'..."
          kubectl create namespace dev

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        
      - name: Set DOCKER_USERNAME as environment variable
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV

      - name: Create DockerHub imagePullSecret
        run: |
          echo "🔐 Creating imagePullSecret 'regcred' in 'dev' namespace..."
          kubectl create secret docker-registry regcred \
            --docker-username=${{ secrets.DOCKER_USERNAME }} \
            --docker-password=${{ secrets.DOCKER_PASSWORD }} \
            --docker-email=noadavid340@example.com \
            -n dev
        
      - name: Deploy to Kubernetes (partial envsubst)
        run: |
          mkdir -p RENDERED
      
          for file in DEPLOY/*.yaml; do
            filename=$(basename "$file")
            if [[ "$filename" == "app-deployment.yaml" ]]; then
              echo "🔄 Rendering $filename with envsubst"
              envsubst < "$file" > "RENDERED/$filename"
            else
              echo "📄 Copying $filename as-is"
              cp "$file" "RENDERED/$filename"
            fi
          done
      
          echo "🚀 Applying all rendered files"
          kubectl apply -n dev -f RENDERED/

